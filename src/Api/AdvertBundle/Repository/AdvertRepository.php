<?php

namespace Api\AdvertBundle\Repository;

use Api\AdvertBundle\Entity\Category;

/**
 * AdvertRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdvertRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAdvert()
    {
        $date = new \DateTime();
        $date->modify('-10 day');

        $qb = $this->createQueryBuilder('a');

        $qb->where('a.date > :date')
            ->setParameter(':date', $date)
            ->orderBy('a.date', 'DESC')
            ->setMaxResults(5);
        5;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAdvertCategory($category)
    {
        $date = new \DateTime();
        $date->modify('-10 day');

        $qb = $this->createQueryBuilder('a');

        $qb
            ->innerJoin('a.categories', 'cat')
            ->addSelect('cat')
            ->where('cat.slugCat = :category')
            ->andWhere('a.date > :date')
            ->setParameters(array('date' => $date, 'category' => $category))
            ->orderBy('a.date', 'DESC');


        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAdvertCity($city)
    {
        $date = new \DateTime();
        $date->modify('-10 day');

        $qb = $this->createQueryBuilder('a');

        $qb
            ->innerJoin('a.city', 'city')
            ->addSelect('city')
            ->where('city.name = :city')
            ->andWhere('a.date > :date')
            ->setParameters(array('date' => $date, 'city' => $city))
            ->orderBy('a.date', 'DESC');


        return $qb
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAdvertCityCategory($city, $category)
    {
        $date = new \DateTime();
        $date->modify('-10 day');

        $qb = $this->createQueryBuilder('a');

        $qb
            ->innerJoin('a.city', 'city')
            ->addSelect('city')
            ->innerJoin('a.categories', 'cat')
            ->addSelect('cat')
            ->where('city.name = :city')
            ->andWhere('cat.slugCat = :category')
            ->andWhere('a.date > :date')
            ->setParameters(array('date' => $date, 'city' => $city, 'category' => $category))
            ->orderBy('a.date', 'DESC');


        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
